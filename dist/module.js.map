{"version":3,"sources":["../src/module.js"],"names":["PLUGIN_PATH","REMOTE_SERVER","StatisticsCtrl","$scope","$injector","$location","linkSrv","remote_server","base_path","dataType","series","data","fontSizes","unitFormats","invalidGaugeRange","valueNameOptions","value","text","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","prefix","postfix","nullText","valueMaps","op","mappingTypes","name","rangeMaps","from","to","mappingType","nullPointMode","valueName","prefixFontSize","valueFontSize","postfixFontSize","thresholds","colorBackground","colorValue","colors","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","tableColumn","subtitle","iconTypes","iconType","allow_modify","defaultsDeep","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","onSparklineColorChange","onSparklineFillChange","addEditorTab","getUnitFormats","subItem","refresh","err","dataList","length","type","tableData","map","tableHandler","setTableValues","seriesHandler","setValues","render","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","columnNames","columns","forEach","column","columnIndex","tableColumnOptions","find","setTableColumnToSensibleDefault","rows","datapoint","row","key","push","col","undefined","isString","valueFormatted","escape","valueRounded","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","roundValue","setValueMapping","options","background","tmp","panelColorIndex","color","newColor","isNumber","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","error","Error","message","JSON","stringify","lastPoint","last","lastValue","isArray","stats","scopedVars","extend","label","i","parseFloat","index","indexOf","splice","rangeMap","scope","elem","attrs","ctrl","$timeout","templateSrv","linkInfo","$panelContainer","applyColoringThresholds","valueString","getColorForValue","getSpan","className","fontSize","replace","getBigValueHtml","body","getValueText","addGauge","width","height","dimension","min","plotCanvas","plotCss","top","margin","position","css","colorMap","bgColor","bootData","user","lightTheme","fontScale","parseInt","gaugeWidthReduceRatio","gaugeWidth","thresholdMarkersWidth","thresholdLabelFontSize","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","addSparkline","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","range","valueOf","grid","hoverable","split","strVale","Number","trim","fullscreen","title","html","toggleClass","hookupDrilldownLinkTooltip","drilldownTooltip","mouseleave","detach","click","evt","parents","window","open","href","location","url","mousemove","e","place_tt","pageX","pageY","renderingCompleted","isFinite","first","PanelCtrl","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport 'vendor/flot/jquery.flot.js';\nimport 'vendor/flot/jquery.flot.gauge.js';\n//import 'app/features/panellinks/link_srv';\n\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\n\nimport './styles/panel.css!';\n\nexport const PLUGIN_PATH = 'public/plugins/statistics-panel/'\nexport const REMOTE_SERVER = 'http://ponte.iot.citibrain.com/resources/'\n\nclass StatisticsCtrl extends MetricsPanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, linkSrv) {\n    super($scope, $injector);\n\n    this.remote_server= REMOTE_SERVER;\n    this.base_path= PLUGIN_PATH;\n\n    this.dataType = 'timeseries';\n    this.series = [];\n    this.data = [];\n    this.fontSizes = [];\n    this.unitFormats = [];\n    this.invalidGaugeRange = false;\n\n    this.valueNameOptions = [\n        { value: 'min', text: 'Min' },\n        { value: 'max', text: 'Max' },\n        { value: 'avg', text: 'Average' },\n        { value: 'current', text: 'Current' },\n        { value: 'total', text: 'Total' },\n        { value: 'name', text: 'Name' },\n        { value: 'first', text: 'First' },\n        { value: 'delta', text: 'Delta' },\n        { value: 'diff', text: 'Difference' },\n        { value: 'range', text: 'Range' },\n        { value: 'last_time', text: 'Time of last point' },\n    ];\n\n    // Set and populate defaults\n    this.panelDefaults = {\n      links: [],\n      datasource: null,\n      maxDataPoints: 100,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      format: 'none',\n      prefix: '',\n      postfix: '',\n      nullText: null,\n      valueMaps: [{ value: 'null', op: '=', text: 'N/A' }],\n      mappingTypes: [{ name: 'value to text', value: 1 }, { name: 'range to text', value: 2 }],\n      rangeMaps: [{ from: 'null', to: 'null', text: 'N/A' }],\n      mappingType: 1,\n      nullPointMode: 'connected',\n      valueName: 'avg',\n      prefixFontSize: '50%',\n      valueFontSize: '80%',\n      postfixFontSize: '50%',\n      thresholds: '',\n      colorBackground: false,\n      colorValue: false,\n      colors: ['#299c46', 'rgba(237, 129, 40, 0.89)', '#d44a3a'],\n      sparkline: {\n        show: false,\n        full: false,\n        lineColor: 'rgb(31, 120, 193)',\n        fillColor: 'rgba(31, 118, 189, 0.18)',\n      },\n      gauge: {\n        show: false,\n        minValue: 0,\n        maxValue: 100,\n        thresholdMarkers: true,\n        thresholdLabels: false,\n      },\n      tableColumn: '',\n      subtitle: 'NA',\n      iconTypes: [\n      'info-circle', 'save', 'editor', 'controller', 'exclamation-triangle',\n      'fighter-jet', 'file', 'home', 'inbox', 'leaf', 'map-marker', 'motorcycle',\n      'plane', 'recycle', 'taxi', 'subway', 'table', 'thermometer-half',\n       'tree', 'trash', 'truck', 'umbrella', 'volume-up'],\n      iconType: '',\n      allow_modify: false\n\n    };\n\n    _.defaultsDeep(this.panel, this.panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.onSparklineColorChange = this.onSparklineColorChange.bind(this);\n    this.onSparklineFillChange = this.onSparklineFillChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%', '50%', '70%', '80%', '100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('Options', `${PLUGIN_PATH}editor.html`, 2);\n    this.addEditorTab('Value Mappings', `${PLUGIN_PATH}mappings.html`, 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    const data = {};\n    if (dataList.length > 0 && dataList[0].type === 'table') {\n      this.dataType = 'table';\n      const tableData = dataList.map(this.tableHandler.bind(this));\n      this.setTableValues(tableData, data);\n    } else {\n      this.dataType = 'timeseries';\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.setValues(data);\n    }\n    this.data = data;\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints || [],\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  tableHandler(tableData) {\n    const datapoints = [];\n    const columnNames = {};\n\n    tableData.columns.forEach((column, columnIndex) => {\n      columnNames[columnIndex] = column.text;\n    });\n\n    this.tableColumnOptions = columnNames;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n      this.setTableColumnToSensibleDefault(tableData);\n    }\n\n    tableData.rows.forEach(row => {\n      const datapoint = {};\n\n      row.forEach((value, columnIndex) => {\n        const key = columnNames[columnIndex];\n        datapoint[key] = value;\n      });\n\n      datapoints.push(datapoint);\n    });\n\n    return datapoints;\n  }\n\n  setTableColumnToSensibleDefault(tableData) {\n    if (this.tableColumnOptions.length === 1) {\n      this.panel.tableColumn = this.tableColumnOptions[0];\n    } else {\n      this.panel.tableColumn = _.find(tableData.columns, col => {\n        return col.type !== 'time';\n      }).text;\n    }\n  }\n\n  setTableValues(tableData, data) {\n    if (!tableData || tableData.length === 0) {\n      return;\n    }\n\n    if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n      return;\n    }\n\n    const datapoint = tableData[0][0];\n    data.value = datapoint[this.panel.tableColumn];\n\n    if (_.isString(data.value)) {\n      data.valueFormatted = _.escape(data.value);\n      data.value = 0;\n      data.valueRounded = 0;\n    } else {\n      const decimalInfo = this.getDecimalsForValue(data.value);\n      const formatFunc = kbn.valueFormats[this.panel.format];\n      data.valueFormatted = formatFunc(\n        datapoint[this.panel.tableColumn],\n        decimalInfo.decimals,\n        decimalInfo.scaledDecimals\n      );\n      data.valueRounded = kbn.roundValue(data.value, this.panel.decimals || 0);\n    }\n\n    this.setValueMapping(data);\n  }\n\n  canChangeFontSize() {\n    return this.panel.gauge.show;\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  onColorChange(panelColorIndex) {\n    return color => {\n      this.panel.colors[panelColorIndex] = color;\n      this.render();\n    };\n  }\n\n  onSparklineColorChange(newColor) {\n    this.panel.sparkline.lineColor = newColor;\n    this.render();\n  }\n\n  onSparklineFillChange(newColor) {\n    this.panel.sparkline.fillColor = newColor;\n    this.render();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    let result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n\n    if (this.series.length > 1) {\n      let error = new Error();\n      error.message = 'Multiple Series Error';\n      error.data =\n        'Metric query returns ' +\n        this.series.length +\n        ' series. Single Stat Panel expects a single series.\\n\\nResponse:\\n' +\n        JSON.stringify(this.series);\n      throw error;\n    }\n\n    if (this.series && this.series.length > 0) {\n      let lastPoint = _.last(this.series[0].datapoints);\n      let lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n      if (this.panel.valueName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else if (this.panel.valueName === 'last_time') {\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        data.value = lastPoint[1];\n        data.valueRounded = data.value;\n        data.valueFormatted = formatFunc(data.value, 0, 0);\n      } else {\n        data.value = this.series[0].stats[this.panel.valueName];\n        data.flotpairs = this.series[0].flotpairs;\n\n        let decimalInfo = this.getDecimalsForValue(data.value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars['__name'] = { value: this.series[0].label };\n    }\n    this.setValueMapping(data);\n  }\n\n  setValueMapping(data) {\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (let i = 0; i < this.panel.valueMaps.length; i++) {\n        let map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n        let map = this.panel.rangeMaps[i];\n        // special null case\n        if (map.from === 'null' && map.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(map.from);\n        var to = parseFloat(map.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = 'no value';\n    }\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({ value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({ from: '', to: '', text: '' });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.statistics-panel');\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">' + valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value) {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' + value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"statistics-panel-value-container\"><div>';\n\n      if (panel.prefix) {\n        var prefix = applyColoringThresholds(data.value, panel.prefix);\n        body += getSpan('statistics-panel-prefix', panel.prefixFontSize, prefix);\n      }\n\n      var value = applyColoringThresholds(data.value, data.valueFormatted);\n      body += getSpan('statistics-panel-value', panel.valueFontSize, value);\n\n      if (panel.postfix) {\n        var postfix = applyColoringThresholds(data.value, panel.postfix);\n        body += getSpan('statistics-panel-postfix', panel.postfixFontSize, postfix);\n      }\n\n      body += '</div></div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      var result = panel.prefix ? templateSrv.replace(panel.prefix, data.scopedVars) : '';\n      result += data.valueFormatted;\n      result += panel.postfix ? templateSrv.replace(panel.postfix, data.scopedVars) : '';\n\n      return result;\n    }\n\n    function addGauge() {\n      var width = elem.width();\n      var height = elem.height();\n      // Allow to use a bit more space for wide gauges\n      var dimension = Math.min(width, height * 1.3);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      var plotCanvas = $('<div></div>');\n      var plotCss = {\n        top: '10px',\n        margin: 'auto',\n        position: 'relative',\n        height: height * 0.9 + 'px',\n        width: dimension + 'px',\n      };\n\n      plotCanvas.css(plotCss);\n\n      var thresholds = [];\n      for (var i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i],\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length - 1],\n      });\n\n      var bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n\n      var fontScale = parseInt(panel.valueFontSize) / 100;\n      var fontSize = Math.min(dimension / 5, 100) * fontScale;\n      // Reduce gauge width if threshold labels enabled\n      var gaugeWidthReduceRatio = panel.gauge.thresholdLabels ? 1.5 : 1;\n      var gaugeWidth = Math.min(dimension / 6, 60) / gaugeWidthReduceRatio;\n      var thresholdMarkersWidth = gaugeWidth / 5;\n      var thresholdLabelFontSize = fontSize / 2.5;\n\n      var options = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: thresholdMarkersWidth + 1,\n                font: { size: thresholdLabelFontSize },\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n              formatter: function() {\n                return getValueText();\n              },\n              font: {\n                size: fontSize,\n                family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n              },\n            },\n            show: true,\n          },\n        },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: [[0, data.valueRounded]],\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      var width = elem.width() + 20;\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      var height = ctrl.height;\n      var plotCanvas = $('<div></div>');\n      var plotCss = {};\n      plotCss.position = 'absolute';\n\n      if (panel.sparkline.full) {\n        plotCss.bottom = '5px';\n        plotCss.left = '-5px';\n        plotCss.width = width - 10 + 'px';\n        var dynamicHeightMargin = height <= 100 ? 5 : Math.round(height / 100) * 15 + 5;\n        plotCss.height = height - dynamicHeightMargin + 'px';\n      } else {\n        plotCss.bottom = '0px';\n        plotCss.left = '-5px';\n        plotCss.width = width - 10 + 'px';\n        plotCss.height = Math.floor(height * 0.25) + 'px';\n      }\n\n      plotCanvas.css(plotCss);\n\n      var options = {\n        legend: { show: false },\n        series: {\n          lines: {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: panel.sparkline.fillColor,\n          },\n        },\n        yaxes: { show: false },\n        xaxis: {\n          show: false,\n          mode: 'time',\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: data.flotpairs,\n        color: panel.sparkline.lineColor,\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n      data = ctrl.data;\n\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n\n      var body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground) {\n        var color = getColorForValue(data, data.value);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      let title = '<div class=\"statistics-panel-title-container\">'+\n                    '<span class=\"fa fa-'+panel.iconType+'\"></span>'+\n                    '<span class=\"statistics-panel-title-content\">'+panel.subtitle+'</span>'+\n                  '</div>';\n\n      elem.html(title);\n      elem.append(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      /*if (panel.links.length > 0) {\n        linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      } else {\n        linkInfo = null;\n      }*/\n      linkInfo = null;\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      var drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(function() {\n        if (panel.links.length === 0) {\n          return;\n        }\n        $timeout(function() {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(function(evt) {\n        if (!linkInfo) {\n          return;\n        }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) {\n          return;\n        }\n\n        if (linkInfo.target === '_blank') {\n          window.open(linkInfo.href, '_blank');\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(function() {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(function(e) {\n        if (!linkInfo) {\n          return;\n        }\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY - 50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  if (!_.isFinite(value)) {\n    return null;\n  }\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nexport { StatisticsCtrl, StatisticsCtrl as PanelCtrl, getColorForValue };\n\nStatisticsCtrl.templateUrl = 'module.html';\n"]}